django


This is to create tables and structure as defined in models

> python manage.py makemigrations music

This will give the queries run on migration

> python manage.py sqlmigrate music 0001

Migrate the changes to project

> python manage.py migrate


python manage.py shell -> to interact with database

b = Album(artist = "Artist 2",
album_title="Album Title 1",
genre="Rock",
album_logo="https://www.fullstackpython.com/img/logos/django.png",
album_release_year=2020)


> make changes to admin file for getting ur app details on admin page


use namespace instead of harcoding data
use  album = get_object_or_404(Album, pk=album_id)
render is used to invoke the html page directly
that is httpResponse is created by it and displayed on the screen
it needs request,file name, context

+++++++++++++++++++================================================


 docker run -d --name mongo -p 27017:27017  -v /home/savin/pycharmWorkspace/data/db:/data/db   mvertes/alpine-mongo


++++++++++++++++++++++++++==========================++++++++++++++++++++++++

Mongo Engine


//Start the container
docker container start c961241d58cd

//Run a shell
docker exec -ti mongo sh

===========================================================================

python manage.py makemigrations shoppingCart

python manage.py migrate --database=scart_db


scart_db

============================================================================


pymongo

"date": datetime.datetime.utcnow()}

insert_one(<dict>).inserted_id
order.find_one({query here})

from bson.objectid import ObjectId

# The web framework gets post_id from the URL and passes it as a string
def get(post_id):
    # Convert from string to ObjectId:
    document = client.db.collection.find_one({'_id': ObjectId(post_id)})

>>> for post in posts.find():
...   pprint.pprint(post)


posts.count_documents({}) with and without query


>>> d = datetime.datetime(2009, 11, 12, 12)
>>> for post in posts.find({"date": {"$lt": d}}).sort("author"):


WORKFILE33573

rec = orders.find_one({"cart.workfile":"WORKFILE06150"})["cart"]["cartQty"]

orders.update_one({"cart.workfile":"WORKFILE06150"},{"$inc" : {"cart.cartQty" : 2}})

orders.update_one({"cart.workfile":"WORKFILE06150"},{"$push" : {"cart.items" : {"itemNumber":21412,"quantity":3,"modelNumber":"AD23412"}}})

orders.update_one({"cart.workfile":"WORKFILE06150"},{"$push" : {"cart.items" : {"itemNumber":12212,"quantity":3,"modelNumber":"AD23412"}}})

orders.delete_one({"workfile":{"$exists":True}})
